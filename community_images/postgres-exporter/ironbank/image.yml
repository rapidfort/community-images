name: postgres-exporter-ib
official_name: PostgreSQL Exporter Iron Bank
official_website: https://github.com/bitnami/containers/tree/main/bitnami/postgres-exporter
source_image_provider: Platform One
source_image_repo: registry1.dso.mil/ironbank/bitnami/postgres-exporter
source_image_repo_link: https://registry1.dso.mil/harbor/projects/3/repositories/bitnami%2Fpostgres-exporter
source_image_readme: https://repo1.dso.mil/dsop/bitnami/postgres-exporter/-/blob/development/README.md
rf_docker_link: rapidfort/postgres-exporter-ib
image_workflow_name: postgres_exporter_ironbank
github_location: postgres-exporter/ironbank
report_url: https://us01.rapidfort.com/app/community/imageinfo/registry1.dso.mil%2Fironbank%2Fbitnami%2Fpostgres-exporter
usage_instructions: |
  # TODO: Add usage instructions here
  $ helm repo add bitnami https://charts.bitnami.com/bitnami

  # install mariadb, just replace repository with RapidFort registry
  $ helm install my-nginx bitnami/template --set image.repository=rapidfort/template
what_is_text: |
  Bitnami PostgreSQL Exporter is a simple server that scrapes PostgreSQL metrics endpoint and exports them as Prometheus metrics.
disclaimer: |
  Trademarks: This software listing is packaged by RapidFort. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.
is_locked: "False"
input_registry:
  registry: registry1.dso.mil
  account: ironbank
repo_sets:
  - bitnami/postgres-exporter:
      input_base_tag: "9."
      output_repo: postgres-exporter-ib
runtimes:
  - type: k8s
    script: k8s_coverage.sh
    helm:
      repo: bitnami
      repo_url: https://charts.bitnami.com/bitnami
      chart: nats
    tls_certs:
      generate: true
      secret_name: localhost-server-tls
      common_name: localhost
    image_keys:
      nats:
        repository: "image.repository"
        tag: "image.tag"
    override_file: "overrides.yml"
  - type: docker_compose
    script: dc_coverage.sh
    compose_file: docker-compose.yml
    tls_certs:
      generate: true
      out_dir: certs
    image_keys:
      redis:
        repository: "REDIS_IMAGE_REPOSITORY"
        tag: "REDIS_IMAGE_TAG"
  - type: docker
    script: docker_coverage.sh
    redis:
      env_file: docker.env
      environment:
        KEY_FOO: VAL_BAR
      volumes:
        configs/dynamic/bootstrap.yaml: /opt/bitnami/redis/conf/redis.yaml
        configs/dynamic: /etc/redis
