image:
  repository: kphull/thanos
  tag: latest-rfstub

# image:
#   pullSecrets: ["rf-regcred"]
#   pullPolicy: Always
objstoreConfig: |-
  type: FILESYSTEM
  config:
    directory: /data
query:
  dnsDiscovery:
    enabled: false
  stores:
    - dnssrv+_grpc._tcp.rf-thanos-ib-storegateway.thanos.svc.cluster.local
    - dnssrv+_grpc._tcp.rf-thanos-ib-ruler.thanos.svc.cluster.local
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
queryFrontend:
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
bucketweb:
  enabled: true
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
compactor:
  enabled: true
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
storegateway:
  enabled: true
  objstoreConfig: |-
    type: FILESYSTEM
    config:
      directory: /data
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
ruler:
  enabled: true
  alertmanagers:
    - http://prometheus-alertmanager.thanos.svc.cluster.local:80
  config: |-
    groups:
      - name: "metamonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: absent(up{prometheus="*/prometheus"})
            labels:
              severity: "critical"
            annotations:
              summary: "Prometheus is down"
              description: "Prometheus server is not reachable."
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsGroup: 0
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    capabilities:
      add: ["SYS_PTRACE"]
  extraEnvVars:
    - name: "RF_VERBOSE"
      value: "0"
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
metrics:
  enabled: true
  serviceMonitor:
    enabled: false
minio:
  enabled: false
persistence:
  enabled: true
  storageClass: "standard"
  accessModes:
    - ReadWriteOnce
  size: 50Gi
