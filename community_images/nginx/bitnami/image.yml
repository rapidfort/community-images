name: nginx
official_name: NGINX
official_website: http://nginx.org/
source_image_provider: Bitnami
source_image_repo: docker.io/bitnami/nginx
source_image_repo_link: https://hub.docker.com/r/bitnami/nginx
source_image_readme: https://github.com/bitnami/containers/blob/main/bitnami/nginx/README.md
rf_docker_link: rapidfort/nginx
image_workflow_name: nginx_bitnami
github_location: nginx/bitnami
report_url: https://us01.rapidfort.com/app/community/imageinfo/docker.io%2Fbitnami%2Fnginx
usage_instructions: |
  $ helm repo add bitnami https://charts.bitnami.com/bitnami

  # install nginx, just replace repository with RapidFort registry
  $ helm install my-nginx bitnami/nginx --set image.repository=rapidfort/nginx
what_is_text: |
  Nginx (pronounced "engine-x") is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server (origin server). The nginx project started with a strong focus on high concurrency, high performance and low memory usage. It is licensed under the 2-clause BSD-like license and it runs on Linux, BSD variants, Mac OS X, Solaris, AIX, HP-UX, as well as on other *nix flavors. It also has a proof of concept port for Microsoft Windows.
disclaimer: |
  Trademarks: This software listing is packaged by RapidFort. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.
is_locked: "True"
input_registry:
  registry: docker.io
  account: bitnami
repo_sets:
  - nginx:
      input_base_tag: "1.25.2-debian-11-r"
  - nginx:
      input_base_tag: "1.24.0-debian-11-r"
runtimes:
  - type: k8s
    script: k8s_coverage.sh
    helm:
      repo: bitnami
      repo_url: https://charts.bitnami.com/bitnami
      chart: nginx
    tls_certs:
      generate: true
      secret_name: localhost-server-tls
      common_name: localhost
    image_keys:
      nginx:
        repository: "image.repository"
        tag: "image.tag"
    override_file: "overrides.yml"
  - type: docker_compose
    script: dc_coverage.sh
    compose_file: docker-compose.yml
    tls_certs:
      generate: true
      out_dir: certs
    image_keys:
      nginx:
        repository: "NGINX_IMAGE_REPOSITORY"
        tag: "NGINX_IMAGE_TAG"