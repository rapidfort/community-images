version: '3'

services:
  reverse-proxy:
    image: ${TRAEFIK_IMAGE_REPOSITORY}:${TRAEFIK_IMAGE_TAG}
    cap_add:
      - SYS_PTRACE
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--log.filePath=/traefik.log"
      - "--log.format=json"
      - "--log.level=DEBUG"
      - "--providers.docker=true"                               
      - "--providers.file.directory=/dockerProvider/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--entryPoints.ping.address=:8082"
      - "--ping.entryPoint=ping"
      - "--ping=true"
    ports:
      # The HTTP port
      - '0.0.0.0::80'
      # 443 for TLS
      - '0.0.0.0::443'
      # Expose Ping
      - '0.0.0.0::8082'
      # The Web UI (enabled by --api.insecure=true) 
      - '0.0.0.0::8080'                                                                    
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Traefik config File to point to certificates
      - "./dockerProvider:/dockerProvider"
      - "./certs:/certs"
    labels:
      - "traefik.http.routers.ping.rule=Host(`ping.docker.localhost`) && Path(`/ping`)"
      - "traefik.http.routers.ping.service=ping@internal"

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    deploy:
      replicas: 2
    labels:
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web-secure"
      - "traefik.http.routers.httpwhoami.rule=Host(`whoami.docker.localhost`)"
      - "traefik.http.routers.httpwhoami.entrypoints=web"
