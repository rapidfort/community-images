# Description of image.yml keys
params:
  - name: name
    description: name of the image
    value: '""'
  - name: official_name
    description: Official name of the image
    value: '""'
  - name: official_website
    description: official website of the image
    value: '""'
  - name: source_image_provider
    description: "source image provider, ex: Bitnami"
    value: '""'
  - name: source_image_repo
    description: source image docker repo, used for linking image in frontrow
    value: '""'
  - name: source_image_repo_link
    description: source image docker repo url
    value: '""'
  - name: rf_docker_link
    description: 'rapidfort docker link, ex: rapidfort/<image>'
    value: '""'
  - name: image_workflow_name
    description: 'used for generating github action file name'
    value: '""'
  - name: github_location
    description: 'relative location of image folder in community_image'
    value: '""'
  - name: report_url
    description: 'frontrow url for the repo'
    value: '""'
  - name: usage_instructions
    description: 'usage instructions such as helm install or docker run'
    value : '""'
  - name: what_is_text
    description: 'description about image, usually copied from official image What is?'
    value : '""'
  - name: disclaimer
    description: 'disclaimer or any legal liability notice to be added'
    value : '""'
  - name: is_locked
    description: 'if the image needs RF_ACCESS_TOKEN to be used or not'
    value : 'False'
  - name: bitnami_excluded_branches
    description: 'bitnami tags are auto generated, this list allows specific branches to be exculded'
    value : ['""', '""']
  - name: docker_links
    description: array of all the different image versions build along with link to original Dockerfile
    value : ['""', '""']
  - name: input_registry.registry
    description: 'source registry used to pull docker image, ex: docker.io'
    value : '""'
  - name: input_registry.account
    description: 'accout in registry from which source image is pulled, ex: bitnami'
    value : '""'
  - name: repo_sets
    description: array of repo_set object describe below.
    value : ['repo_set', 'repo_set']
  - name: needs_common_commands
    description: needs to run common commands or not
    value : 'true'
  - name: runtimes
    description: array of runtime object describe below.
    value : ['runtime', 'runtime']
repo_set_params:
  - name: <repo>.input_base_tag
    description: input base tag to search for a given repo
    value : '""'
  - name: <repo>.output_repo
    description: output repo name for the repo
    value : 'defaults to <repo>'
    required: no
runtime_params:
  - name: type
    description: pick from k8s, docker_compose, docker
    value : 'pickOne: [k8s, docker_compose, docker]'
  - name: script
    description: script to be called for the runtime
    value : '""'
    required: no
k8s_runtime_params:
  - name: helm.repo
    description: "helm repo to use for k8s runtime, ex: 'bitnami'"
    value : '""'
  - name: helm.repo_url
    description: "helm repo URL to use for k8s runtime, ex: 'https://charts.bitnami.com/bitnami'"
    value : '""'
  - name: helm.chart
    description: "helm chart to use for k8s runtime, ex: 'nats'"
    value : '""'
  - name: readiness_wait_pod_name_suffix
    description: "only valid for wait_type: pod, defaults to 0"
    value : '["0"]'
    required: no
  - name: readiness_wait_deployments_suffix
    description: "wait for list of deployment suffix, {release_name}-suffix"
    value : '[""]'
    required: no
  - name: tls_certs.generate
    description: if tls certs generation is needed true/false
    value : 'false'
    required: no
  - name: tls_certs.secret_name
    description: secret name to store tls certs
    value : '""'
  - name: tls_certs.common_name
    description: common name to use in generated tls certs, defaults to localhost
    value : 'localhost'
  - name: helm_additional_params
    description: additional key value parameters rendered as --set key=value for helm install command
    value: '""'
    required: no
  - name: readiness_check_script
    description: readiness check script to run for k8s deployment
    value: '""'
    required: no
  - name: readiness_check_timeout
    description: timeout for readiness check script to run in seconds
    value: '300'
    required: no
  - name: image_keys.<repo>.repository
    description: key to use for helm install command to specify image repository, needed for multi container system
    value : 'image.repository'
    required: no
  - name: image_keys.<repo>.tag
    description: key to use for helm install command to specify image tag, needed for multi container system
    value : 'image.tag'
    required: no
docker_compose_runtime_params:
  - name: compose_file
    description: docker compose file path
    value : '""'
  - name: env_file
    description: environment file for default env variables
    value : 'docker.env'
    required: no
  - name: wait_time_sec
    description: wait time in seconds after docker-compose up
    value : '30'
    required: no
  - name: tls_certs.generate
    description: if tls certs generation is needed true/false
    value : 'false'
    required: no
  - name: tls_certs.out_dir
    description: output directory relative to image.yml dir to store tls certs, defaults to certs
    value : 'certs'
    required: no
  - name: image_keys.<repo>.repository
    description: environment variable to specify repository for the repo, as describe in docker-compose.yml
    value : '""'
  - name: image_keys.<repo>.tag
    description: environment variable to specify tag for the repo, as describe in docker-compose.yml
    value : '""'
docker_runtime_params:
  - name: wait_time_sec
    description: wait time in seconds after all docker run completes
    value : '30'
    required: no
  - name: tls_certs.generate
    description: if tls certs generation is needed true/false
    value : 'false'
    required: no
  - name: tls_certs.out_dir
    description: output directory relative to image.yml dir to store tls certs, defaults to certs
    value : 'certs'
    required: no
  - name: volumes
    description: map of input volumes, relative to script dir and mounted volume in ALL container
    value : '""'
  - name: environment
    description: map of environment variables to be mounted in ALL container
    value : '""'
  - name: <repo>.env_file
    description: repo specific environment file for default env variables
    value : 'docker.env'
    required: no
  - name: <repo>.volumes
    description: map of input volumes, relative to script dir and mounted volume in container
    value : '""'
  - name: <repo>.environment
    description: map of environment variables to be mounted in container
    value : '""'
  - name: <repo>.exec_command
    description: exec_command for container
    value : '""'
  - name: <repo>.daemon
    description: if use daemon or interactive container flag -i or -d
    value : 'True'
  - name: <repo>.entrypoint
    description: entrypoint for container
    value : '""'
  - name: <repo>.ports
    description: list of ports to expose
    value : '["", ""]'
