# Generated by Selenium IDE
# pylint: skip-file

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestYourlsuitest():
    def setup_method(self, method):  # pylint: disable=unused-argument
        """setup method."""
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument('--disable-dev-shm-usage')
        chrome_options.add_argument("disable-infobars")
        chrome_options.add_argument("--disable-extensions")
        chrome_options.add_argument("--disable-gpu")
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument('ignore-certificate-errors')

        self.driver = webdriver.Chrome(
            options=chrome_options)  # pylint: disable=attribute-defined-outside-init
        self.driver.implicitly_wait(30)

    def teardown_method(self, method):  # pylint: disable=unused-argument
        """teardown method."""
        self.driver.quit()
  
    def test_yourlsuitest(self, params):
        # Navigating to Initial Installation Page
        # self.driver.get("http://localhost:{}/".format(params["port"]))
        self.driver.get("http://localhost:{}/login"
            .format(
                params["port"]))
        self.driver.set_window_size(1552, 832)
        self.driver.find_element(By.NAME, "email").click()
        self.driver.find_element(By.NAME, "email").send_keys("sample@example.com")
        self.driver.find_element(By.NAME, "password").click()
        self.driver.find_element(By.NAME, "password").send_keys("pass_123")
        self.driver.find_element(By.NAME, "internal_button").click()
        self.driver.find_element(By.LINK_TEXT, "Add New Server").click()
        element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"Connection\"]")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.find_element(By.XPATH, "//div[2]/div/div/input").send_keys("Postgres Demo")
        self.driver.find_element(By.XPATH, "//button[contains(.,\'Connection\')]").click()
        self.driver.find_element(By.XPATH, "//div[3]/div/div/div[2]/div/div/input").click()
        self.driver.find_element(By.XPATH, "//div[3]/div/div/div[2]/div/div/input").send_keys("postgres")
        self.driver.find_element(By.XPATH, "//div[4]/div[2]/div/div/input").click()
        self.driver.find_element(By.XPATH, "//div[4]/div[2]/div/div/input").click()
        element = self.driver.find_element(By.XPATH, "//div[4]/div[2]/div/div/input")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.XPATH, "//div[4]/div[2]/div/div/input").send_keys("postgres")
        self.driver.find_element(By.XPATH, "//div[6]/div[2]/div/div/input").click()
        self.driver.find_element(By.XPATH, "//div[6]/div[2]/div/div/input").send_keys("mysecretpassword")
        self.driver.find_element(By.XPATH, "//button[contains(.,\'Save\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".active > .directory-toggle").click()
        # self.driver.save_screenshot("scrsht1.png")
        # self.driver.find_element(By.XPATH, "//div[3]/div/span/span").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".active > .directory-toggle").click()
        # self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-properties .MuiBox-root > span").click()
        # self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-sql .MuiBox-root > span").click()
        # self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-statistics .MuiBox-root > span").click()
        # element = self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-statistics .MuiSvgIcon-root")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-dependencies > .drag-initiator").click()
        # self.driver.find_element(By.CSS_SELECTOR, "#rc-tabs-1-tab-id-dependents > .drag-initiator").click()
        # self.driver.find_element(By.XPATH, "//span[contains(.,\'Processes\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".jss89 > .MuiButtonBase-root:nth-child(1)").click()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'Reset Layout\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiButton-contained:nth-child(3) > .MuiSvgIcon-root").click()
        # self.driver.find_element(By.XPATH, "//div[2]/ul/li/div").click()
        # self.driver.find_element(By.XPATH, "//li/ul/li").click()
        # self.driver.save_screenshot("scrsht2.png")
        # self.driver.find_element(By.XPATH, "//div[2]/div/div/div[2]/div/div/input").send_keys("sample_schema2")
        # self.driver.save_screenshot("scrsht3.png")
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiButton-contained > .MuiButton-icon > .MuiSvgIcon-root").click()
        # self.driver.save_screenshot("scrsht4.png")
        # self.driver.implicitly_wait(30)
        # time.sleep(30)
        # self.driver.find_element(By.XPATH,"//div[12]/div/span/span").click()
        # self.driver.implicitly_wait(30)
        # self.driver.find_element(By.CSS_SELECTOR,".active > .directory-toggle").click()
        # self.driver.implicitly_wait(30)
        # self.driver.save_screenshot("scrsht8.png")
        # self.driver.find_element(By.CSS_SELECTOR,"div:nth-child(14) .file-name").click()
        # self.driver.save_screenshot("scrsht5.png")
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiButton-contained:nth-child(3) > .MuiSvgIcon-root").click()
        # self.driver.save_screenshot("scrsht6.png")
        # self.driver.implicitly_wait(30)
        # time.sleep(30)
        # self.driver.find_element(By.XPATH, "//div[2]/ul/li/div").click()
        # self.driver.save_screenshot("scrsht7.png")
        # self.driver.find_element(By.XPATH, "//div[@id='root']/div/div[2]/div[2]/ul/li/ul/li[14]").click()
        # self.driver.find_element(By.XPATH, "//div[2]/div/div/div[2]/div/div/input").click()
        # self.driver.find_element(By.XPATH, "//div[2]/div/div/div[2]/div/div/input").send_keys("table1")
        # self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"Columns\"]").click()
        # self.driver.find_element(By.CSS_SELECTOR, '*[data-test="add-row"]').click()
        # # element = self.driver.find_element(By.CSS_SELECTOR, ".jss230:nth-child(3) .jss353:nth-child(2) > .jss361 path")
        # # actions = ActionChains(self.driver)
        # # actions.move_to_element(element).perform()
        # # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # # actions = ActionChains(self.driver)
        # # actions.move_to_element(element, 0, 0).perform()
        # self.driver.find_element(By.CSS_SELECTOR, ".Mui-focused > .MuiInputBase-input").send_keys("col1")
        # self.driver.find_element(By.XPATH, "//div[5]/div/div/div/div/div[2]").click()
        # self.driver.find_element(By.XPATH, "//span[contains(.,\'bigint\')]").click()
        # self.driver.find_element(By.NAME, "attnotnull").click()
        # self.driver.find_element(By.NAME, "is_primary_key").click()
        # self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"Save\"]").click()
        # self.driver.execute_script("window.scrollTo(0,0)")
        # self.driver.find_element(By.XPATH, "//button[contains(.,\'Tools\')]").click()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'ERD Tool\')]").click()
        # self.driver.find_element(By.XPATH, "//button[contains(.,\'Tools\')]").click()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'Import/Export Servers...\')]").click()
        # element = self.driver.find_element(By.CSS_SELECTOR, ".MuiToggleButtonGroup-lastButton")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiToggleButtonGroup-lastButton").click()
        # self.driver.find_element(By.XPATH, "//div[2]/div/div/div[2]/div/div/div/div/div/div/div/div[2]/div/div/div/div/div/div/div[2]/div[2]/div/div/input").click()
        # self.driver.find_element(By.XPATH, "//div[2]/div/div/div[2]/div/div/div/div/div/div/div/div[2]/div/div/div/div/div/div/div[2]/div[2]/div/div/input").send_keys("sample_server")
        # self.driver.save_screenshot("scrsht8.png")
        # self.driver.find_element(By.XPATH, "//button[contains(.,'Next')]").click()
        # self.driver.save_screenshot("scrsht9.png")
        # self.driver.find_element(By.CSS_SELECTOR, ".jss463").click()
        # self.driver.save_screenshot("scrsht10.png")
        # self.driver.find_element(By.XPATH, "//button[contains(.,'Next')]").click()
        # self.driver.save_screenshot("scrsht11.png")
        # self.driver.find_element(By.XPATH, "//button[contains(.,'Finish')]").click()
        # self.driver.find_element(By.XPATH, "//button[contains(.,'OK')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiButton-sizeSmall:nth-child(4) > .MuiSvgIcon-root").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiInputBase-inputTypeSearch").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiInputBase-inputTypeSearch").send_keys("schema")
        # self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"search\"]").click()
        # element = self.driver.find_element(By.CSS_SELECTOR, ".dock-panel:nth-child(1) .dock-bar .MuiBox-root > .MuiButtonBase-root")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # self.driver.find_element(By.CSS_SELECTOR, ".dock-panel:nth-child(1) .dock-bar .MuiBox-root > .MuiButtonBase-root path").click()
        # self.driver.switch_to.frame(0)
        # element = self.driver.find_element(By.NAME, "menu-saveas")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, ".css-168ntyt")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"btn-conn-status\"]")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # self.driver.switch_to.default_content()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiSvgIcon-fontSizeSmall:nth-child(2)").click()
        # element = self.driver.find_element(By.CSS_SELECTOR, ".MuiSvgIcon-fontSizeSmall:nth-child(2) > path")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'Two-Factor Authentication\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".jss509 > .MuiBox-root:nth-child(3) .MuiSvgIcon-root").click()
        # self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"loggedin-username\"]").click()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'Users\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".jss537 > .MuiSvgIcon-root").click()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"add-row\"]")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # element = self.driver.find_element(By.CSS_SELECTOR, "body")
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        # self.driver.find_element(By.NAME, "email").click()
        # self.driver.find_element(By.NAME, "email").send_keys("sample_1@example.com")
        # self.driver.find_element(By.NAME, "newPassword").click()
        # self.driver.find_element(By.NAME, "newPassword").send_keys("pass_123")
        # self.driver.find_element(By.NAME, "confirmPassword").click()
        # self.driver.find_element(By.NAME, "confirmPassword").send_keys("pass_123")
        # self.driver.find_element(By.XPATH, "//button[contains(.,\'Save\')]").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".MuiSvgIcon-fontSizeSmall:nth-child(2)").click()
        # self.driver.find_element(By.XPATH, "//li[contains(.,\'Logout\')]").click()
  
