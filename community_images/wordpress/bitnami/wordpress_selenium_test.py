"""The selenium test."""
# Generated by Selenium IDE
import json # pylint: disable=import-error disable=unused-import
import time # pylint: disable=import-error disable=unused-import
import pytest #pylint: disable=import-error disable=unused-import
from selenium import webdriver # pylint: disable=import-error
from selenium.webdriver.chrome.options import Options # pylint: disable=import-error
from selenium.webdriver.common.by import By # pylint: disable=import-error
from selenium.webdriver.common.action_chains import ActionChains # pylint: disable=import-error disable=unused-import
from selenium.webdriver.support import expected_conditions # pylint: disable=import-error disable=unused-import
from selenium.webdriver.support.wait import WebDriverWait # pylint: disable=import-error disable=unused-import
from selenium.webdriver.common.keys import Keys # pylint: disable=import-error disable=unused-import
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities # pylint: disable=import-error disable=unused-import

class TestWordpresstest1():
    """The test word press class for testing wordpress image."""
    def setup_method(self, method): # pylint: disable=unused-argument
        """setup method."""
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument('--disable-dev-shm-usage')
        chrome_options.add_argument("disable-infobars")
        chrome_options.add_argument("--disable-extensions")
        chrome_options.add_argument("--disable-gpu")
        chrome_options.add_argument("--no-sandbox")
        self.driver = webdriver.Chrome(options=chrome_options) # pylint: disable=attribute-defined-outside-init

    def teardown_method(self, method): # pylint: disable=unused-argument
        """teardown method."""
        self.driver.quit()

    def test_wordpresstest1(self, params):
        """test wordpress."""
        # Test name: wordpress-test-1
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("http://{}:{}/".format(params["ip_address"], params["port"])) # pylint: disable=consider-using-f-string
        # 2 | setWindowSize | 1095x688 |
        self.driver.set_window_size(1095, 688)
        # 3 | click | linkText=Hello world! |
        self.driver.find_element(By.LINK_TEXT, "Hello world!").click()
        # 4 | click | id=comment |
        self.driver.find_element(By.ID, "comment").click()
        # 5 | type | id=comment | hello
        self.driver.find_element(By.ID, "comment").send_keys("hello")
        # 6 | click | id=author |
        self.driver.find_element(By.ID, "author").click()
        # 7 | type | id=author | hello
        self.driver.find_element(By.ID, "author").send_keys("hello")
        # 8 | type | id=email | hello@abc.com
        self.driver.find_element(By.ID, "email").send_keys("hello@abc.com")
        # 9 | type | id=url | http://hello.com
        self.driver.find_element(By.ID, "url").send_keys("http://hello.com")
        # 10 | click | id=submit |
        self.driver.find_element(By.ID, "submit").click()
        # 11 | click | linkText=User's Blog! |
        #self.driver.find_element(By.LINK_TEXT, "User\'s Blog!").click()
