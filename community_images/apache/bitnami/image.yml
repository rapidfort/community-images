name: apache
official_name: Apache
official_website: https://httpd.apache.org/
source_image_provider: Bitnami
source_image_repo: docker.io/bitnami/apache
source_image_repo_link: https://hub.docker.com/r/bitnami/apache
source_image_readme: https://github.com/bitnami/containers/blob/main/bitnami/apache/README.md
rf_docker_link: rapidfort/apache
image_workflow_name: apache_bitnami
github_location: apache/bitnami
report_url: https://frontrow.rapidfort.com/app/community/imageinfo/docker.io%2Fbitnami%2Fapache
usage_instructions: |
  $ helm repo add bitnami https://charts.bitnami.com/apache

  # install apache, just replace repository with RapidFort registry
  $ helm install my-apache bitnami/apache --set image.repository=rapidfort/apache
what_is_text: |
  The Apache HTTP Server Project is an effort to develop and maintain an open-source HTTP server for modern operating systems including UNIX and Windows. httpd is the Apache HyperText Transfer Protocol (HTTP) server program. It is designed to be run as a standalone daemon process. When used like this it will create a pool of child processes or threads to handle requests.
disclaimer: |
  Trademarks: This software listing is packaged by RapidFort. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.
input_registry:
  registry: docker.io
  account: bitnami
repo_sets:
  - apache:
      input_base_tag: "2.4.54-debian-11-r"
runtimes:
  - type: k8s
    script: k8s_coverage.sh
    helm_repo: bitnami/apache
    tls_certs:
      generate: true
      secret_name: localhost-server-tls
      common_name: localhost
    image_keys:
      apache:
        repository: "image.repository"
        tag: "image.tag"
    override_file: "overrides.yml"
  - type: docker_compose
    script: dc_coverage.sh
    compose_file: docker-compose.yml
    tls_certs:
      generate: true
      out_dir: certs
    image_keys:
      apache:
        repository: "APACHE_IMAGE_REPOSITORY"
        tag: "APACHE_IMAGE_TAG"
  - type: docker
    script: docker_coverage.sh
    tls_certs:
      generate: true
      out_dir: certs

