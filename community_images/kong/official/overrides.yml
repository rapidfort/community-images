image:
  pullSecrets: ["rf-regcred"]
  pullPolicy: Always
containerSecurityContext:
  runAsUser: 1001
  allowPrivilegeEscalation: true
  capabilities:
    add: ["SYS_PTRACE", "SETUID", "SETGID"]
extraEnvVars:
  - name: "RF_VERBOSE"
    value: "0"
ingressController:
 enabled: false 
image:
 repository: kong/kong-gateway
 tag: "3.6.1.3"
secretVolumes:
 - kong-cluster-cert
env:
 role: control_plane
 # These certificates are used for control plane / data plane communication
 cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
 cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  
 # Database
 # CHANGE THESE VALUES
 database: postgres
 pg_database: kong
 pg_user: kong
 pg_password: demo123
 pg_host: kong-cp-postgresql.kong.svc.cluster.local
 pg_ssl: "on"
  
 # Kong Manager password
 password: kong_admin_password
  
# Enterprise functionality
enterprise:
 enabled: true
 license_secret: kong-enterprise-license
  
# The control plane serves the Admin API
admin:
 enabled: true
 http:
   enabled: true
  
# Clustering endpoints are required in hybrid mode
cluster:
 enabled: true
 tls:
   enabled: true
  
clustertelemetry:
 enabled: true
 tls:
   enabled: true
  
# Optional features
manager:
 enabled: false
  
# These roles will be served by different Helm releases
proxy:
 enabled: false
livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 30
readinessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 30
